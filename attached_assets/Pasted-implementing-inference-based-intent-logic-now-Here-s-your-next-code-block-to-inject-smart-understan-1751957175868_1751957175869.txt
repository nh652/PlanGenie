implementing inference-based intent logic now. Here’s your next code block to inject smart understanding:

✅ Step-by-Step Update
🔧 1. Add this helper function (place it after parseDataAllowance):

js
Copy
Edit
function inferUserIntent(queryText) {
  const inferences = {
    inferredFeatures: [],
    inferredMinDailyData: null,
    inferredVoiceOnly: false,
    inferredTargetDuration: null
  };

  const text = queryText.toLowerCase();

  if (text.includes('stream') || text.includes('binge') || text.includes('watch')) {
    inferences.inferredFeatures.push('ott');
    inferences.inferredMinDailyData = 2;
  }

  if (text.includes('long term') || text.includes('yearly') || text.includes('annual')) {
    inferences.inferredTargetDuration = 365;
  }

  if (text.includes('heavy user') || text.includes('power user')) {
    inferences.inferredMinDailyData = 2.5;
  }

  if (text.includes('just calls') || text.includes('only calls') || text.includes('voice only')) {
    inferences.inferredVoiceOnly = true;
  }

  if (text.includes('short term') || text.includes('weekend only')) {
    inferences.inferredTargetDuration = 1; // fallback to 1-day low cost plans
  }

  return inferences;
}
🔧 2. Insert this just after extracting queryText in your webhook:

js
Copy
Edit
// Infer intent if user hasn't been explicit
const inference = inferUserIntent(queryText);

// Only override if not already specified
if (!targetDuration && inference.inferredTargetDuration) {
  targetDuration = inference.inferredTargetDuration;
  console.log("🔍 Inferred duration:", targetDuration);
}

if (!isVoiceOnly && inference.inferredVoiceOnly) {
  isVoiceOnly = true;
  console.log("🔍 Inferred voice-only requirement");
}

if (!minDailyData && inference.inferredMinDailyData) {
  minDailyData = inference.inferredMinDailyData;
  console.log("🔍 Inferred min daily data:", minDailyData);
}

if (inference.inferredFeatures.length > 0) {
  inference.inferredFeatures.forEach(f => {
    if (!requestedFeatures.includes(f)) requestedFeatures.push(f);
  });
  console.log("🔍 Inferred features:", inference.inferredFeatures);
}